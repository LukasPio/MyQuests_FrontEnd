"use strict";function _typeof(o){"@babel/helpers - typeof";return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}Object.defineProperty(exports,"__esModule",{value:true});exports.showLoading=exports.enableLoading=void 0;var _sweetalert=_interopRequireDefault(require("../sweetalert2.js"));var _classes=require("../utils/classes.js");var dom=_interopRequireWildcard(require("../utils/dom/index.js"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r})(e)}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=_typeof(e)&&"function"!=typeof e)return{"default":e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&Object.prototype.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u]}return n["default"]=e,t&&t.set(e,n),n}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}/**
 * Shows loader (spinner), this is useful with AJAX requests.
 * By default the loader be shown instead of the "Confirm" button.
 *
 * @param {HTMLButtonElement | null} [buttonToReplace]
 */var showLoading=exports.enableLoading=exports.showLoading=function showLoading(buttonToReplace){var popup=dom.getPopup();if(!popup){new _sweetalert["default"];// eslint-disable-line no-new
}popup=dom.getPopup();if(!popup){return}var loader=dom.getLoader();if(dom.isToast()){dom.hide(dom.getIcon())}else{replaceButton(popup,buttonToReplace)}dom.show(loader);popup.setAttribute("data-loading","true");popup.setAttribute("aria-busy","true");popup.focus()};/**
 * @param {HTMLElement} popup
 * @param {HTMLButtonElement | null} [buttonToReplace]
 */var replaceButton=function replaceButton(popup,buttonToReplace){var actions=dom.getActions();var loader=dom.getLoader();if(!actions||!loader){return}if(!buttonToReplace&&dom.isVisible(dom.getConfirmButton())){buttonToReplace=dom.getConfirmButton()}dom.show(actions);if(buttonToReplace){dom.hide(buttonToReplace);loader.setAttribute("data-button-to-replace",buttonToReplace.className);actions.insertBefore(loader,buttonToReplace)}dom.addClass([popup,actions],_classes.swalClasses.loading)};