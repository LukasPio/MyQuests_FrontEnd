"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.handlePopupClick=void 0;var _DismissReason=require("./utils/DismissReason.js");var _utils=require("./utils/utils.js");/**
 * @param {SweetAlertOptions} innerParams
 * @param {DomCache} domCache
 * @param {Function} dismissWith
 */var handlePopupClick=exports.handlePopupClick=function handlePopupClick(innerParams,domCache,dismissWith){if(innerParams.toast){handleToastClick(innerParams,domCache,dismissWith)}else{// Ignore click events that had mousedown on the popup but mouseup on the container
// This can happen when the user drags a slider
handleModalMousedown(domCache);// Ignore click events that had mousedown on the container but mouseup on the popup
handleContainerMousedown(domCache);handleModalClick(innerParams,domCache,dismissWith)}};/**
 * @param {SweetAlertOptions} innerParams
 * @param {DomCache} domCache
 * @param {Function} dismissWith
 */var handleToastClick=function handleToastClick(innerParams,domCache,dismissWith){// Closing toast by internal click
domCache.popup.onclick=function(){if(innerParams&&(isAnyButtonShown(innerParams)||innerParams.timer||innerParams.input)){return}dismissWith(_DismissReason.DismissReason.close)}};/**
 * @param {SweetAlertOptions} innerParams
 * @returns {boolean}
 */var isAnyButtonShown=function isAnyButtonShown(innerParams){return!!(innerParams.showConfirmButton||innerParams.showDenyButton||innerParams.showCancelButton||innerParams.showCloseButton)};var ignoreOutsideClick=false;/**
 * @param {DomCache} domCache
 */var handleModalMousedown=function handleModalMousedown(domCache){domCache.popup.onmousedown=function(){domCache.container.onmouseup=function(e){domCache.container.onmouseup=function(){};// We only check if the mouseup target is the container because usually it doesn't
// have any other direct children aside of the popup
if(e.target===domCache.container){ignoreOutsideClick=true}}}};/**
 * @param {DomCache} domCache
 */var handleContainerMousedown=function handleContainerMousedown(domCache){domCache.container.onmousedown=function(){domCache.popup.onmouseup=function(e){domCache.popup.onmouseup=function(){};// We also need to check if the mouseup target is a child of the popup
if(e.target===domCache.popup||e.target instanceof HTMLElement&&domCache.popup.contains(e.target)){ignoreOutsideClick=true}}}};/**
 * @param {SweetAlertOptions} innerParams
 * @param {DomCache} domCache
 * @param {Function} dismissWith
 */var handleModalClick=function handleModalClick(innerParams,domCache,dismissWith){domCache.container.onclick=function(e){if(ignoreOutsideClick){ignoreOutsideClick=false;return}if(e.target===domCache.container&&(0,_utils.callIfFunction)(innerParams.allowOutsideClick)){dismissWith(_DismissReason.DismissReason.backdrop)}}};